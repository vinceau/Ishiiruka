name: build

on: [push]

jobs:
  build:
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v1
    - name: install dependencies
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update -y
        # sudo apt-get install -y libxi-dev x11-xserver-utils
        # sudo apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libavutil-dev
        # sudo apt-get install -y libsoundio-dev
        # sudo apt-get install -y libudev-dev libevdev-dev
        # sudo apt-get install -y build-essential libgtk2.0-dev
        sudo apt install cmake pkg-config git libao-dev libasound2-dev libavcodec-dev libavformat-dev libbluetooth-dev libenet-dev libgtk2.0-dev liblzo2-dev libminiupnpc-dev libopenal-dev libpulse-dev libreadline-dev libsfml-dev libsoil-dev libsoundtouch-dev libswscale-dev libusb-1.0-0-dev libwxbase3.0-dev libwxgtk3.0-dev libxext-dev libxrandr-dev portaudio19-dev zlib1g-dev libudev-dev libevdev-dev "libpolarssl-dev|libmbedtls-dev" libcurl4-openssl-dev libegl1-mesa-dev libpng-dev qtbase5-private-dev
    - name: linux portable build
      if: contains(matrix.os, 'ubuntu')
      run: |
        mkdir Build
        cd Build
        cmake .. -DLINUX_LOCAL_DEV=true
        make
        cp -r ../Data/Sys/ Binaries/
        touch Binaries/portable.txt
    - name: macos build
      if: contains(matrix.os, 'macOS')
      run: |
        mkdir build
        cd build
        cmake ..
        make
