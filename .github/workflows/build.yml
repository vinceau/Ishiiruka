name: build

on: [push]

jobs:
  build:
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Install MacOS dependencies
      if: contains(matrix.os, 'macOS')
      run: |
        sudo mkdir -p "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs"
        cd "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs"
        sudo wget "https://github.com/phracker/MacOSX-SDKs/releases/download/MacOSX10.11.sdk/MacOSX10.11.sdk.tar.xz"
        sudo tar -xJf "MacOSX10.11.sdk.tar.xz"
        sudo rm "MacOSX10.11.sdk.tar.xz"
        ls "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs"
        pwd
        # ls "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOS10.11.sdk"
    - name: Install Linux dependencies
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update -y
        sudo apt install cmake pkg-config git libao-dev libasound2-dev libavcodec-dev libavformat-dev libbluetooth-dev libenet-dev libgtk2.0-dev liblzo2-dev libminiupnpc-dev libopenal-dev libpulse-dev libreadline-dev libsfml-dev libsoil-dev libsoundtouch-dev libswscale-dev libusb-1.0-0-dev libwxbase3.0-dev libwxgtk3.0-dev libxext-dev libxrandr-dev portaudio19-dev zlib1g-dev libudev-dev libevdev-dev "libpolarssl-dev|libmbedtls-dev" libcurl4-openssl-dev libegl1-mesa-dev libpng-dev qtbase5-private-dev
    - name: Build portable Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        mkdir Build
        cd Build
        cmake .. -DLINUX_LOCAL_DEV=true
        make
        cp -r ../Data/Sys/ Binaries/
        touch Binaries/portable.txt
    - name: Build MacOS
      if: contains(matrix.os, 'macOS')
      run: |
        mkdir build
        cd build
        cmake ..
        make
    - name: Build Windows
      if: contains(matrix.os, 'windows')
      shell: powershell
      run: |
        Get-Command ipconfig
        Get-Command msbuild
        Get-Command Msbuild
        Get-Command devenv
